package hw4;

import api.Card;

/**
 * Evaluator for a generalized full house.  The number of main
 * cards is equal to the total cards.  If the total cards N is an even number,
 * then the cards must consist of two groups of N / 2 cards that have matching rank.  
 * If N is an odd number, then the cards must consist of two groups, one of 
 * (N / 2) + 1 cards of matching rank and other of (N / 2) cards of matching rank. 
 * (This evaluator is always satisfied when all cards are of the same rank.)
 * In the case that N is odd, when creating
 * a hand, <strong>the larger group must be listed first even if of lower rank
 * than the smaller group</strong> (e.g. as [3 3 3 5 5] rather than [5 5 3 3 3]).
 * 
 * The name of this evaluator is "Full House".
 */
//Note: You must edit this declaration to extend AbstractEvaluator
//or to extend some other class that extends AbstractEvaluator
public class FullHouseEvaluator extends AbstractEvaluator
{
  /**
   * Constructs the evaluator.
   * @param ranking
   *   ranking of this hand
   * @param totalCards
   *   number of cards in a hand
   */
  public FullHouseEvaluator(int ranking, int totalCards)
  {
    super(ranking, totalCards);
  }

@Override
public String getName() {
	
	return "Full House";
}

@Override
public int numMainCards() {
	
	return totalCards();
}

@Override
public boolean satisfiedBy(Card[] mainCards) {
	
	if(mainCards.length == numMainCards())
	{
		Card check1 = mainCards[0];
		Card check2 = mainCards[0];
		for (int i = 1; i < numMainCards(); i++)
		{
			if(!(mainCards[i] == check1))
			{
				check2 = mainCards[i];
				break;
			}
		}
		int count1 = 0;
		int count2 = 0;
		for(int i = 1; i < numMainCards(); i++)
		{
			if(mainCards[i] == check1)
			{
				count1+=1;
			}
			else if(mainCards[i] == check2)
			{
				count2+=1;
			}
			else
			{
				return false;
			}
			
		}
		if(numMainCards()%2==0)
		{
			if(count1==count2&&count1==numMainCards()/2)
			{
				return true;
			}
		}
		else
		{
			if(count1==numMainCards()/2&&count2==count1+1)
			{
				return true;
			}
			else if(count2==numMainCards()/2&&count1==count2+1)
			{
				return true;
			}
			else
			{
				return false;
			}
		}
		
	}
	
	return false;
}
}
